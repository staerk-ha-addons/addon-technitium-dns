#!/command/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# Watch certificates for changes and regenerate PKCS #12 if needed
# ==============================================================================

bashio::log.info "================================================="
bashio::log.info "  Starting Certificate Tool"
bashio::log.info "================================================="

# Add strict mode
set -euo pipefail

# Source utilities and perform initial setup
if ! source "/etc/s6-overlay/scripts/cert_utils.sh"; then
    bashio::exit.nok "Failed to source certificate utilities"
fi

# Function to get unique directories to watch
get_watch_dirs() {
    echo "$(dirname "$CERT_FILE")" "$(dirname "$KEY_FILE")" "$(dirname "$PKCS12_FILE")" | tr ' ' '\n' | sort -u
}

# Initial certificate setup
handle_cert_update

# Add health check
check_inotify() {
    if ! command -v inotifywait >/dev/null 2>&1; then
        bashio::log.error "inotifywait not found"
        return 1
    fi
    return 0
}

# Add debouncing for file changes
readonly DEBOUNCE_SECONDS=10
handle_cert_changes() {
    local last_run=0
    local now
    
    now=$(date +%s)
    if (( now - last_run < DEBOUNCE_SECONDS )); then
        return 0
    fi
    
    handle_cert_update
    last_run=$now
}

# Create all required directories
for dir in $(get_watch_dirs); do
    mkdir -p "$dir"
done

# Watch for changes
sleep 10
bashio::log.info "Starting certificate watch..."
while true; do
    # Watch parent directories for any changes
    if ! inotifywait -e close_write,move,create,delete $(get_watch_dirs) >/dev/null 2>&1; then
        bashio::log.warning "inotifywait failed, retrying in 10 seconds..."
        sleep 10
        continue
    fi

    bashio::log.info "Detected certificate change..."
    handle_cert_changes
done
