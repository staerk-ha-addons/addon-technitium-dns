#!/command/with-contenv bashio
# shellcheck shell=bash
# ==============================================================================
# Watch certificates for changes and regenerate PKCS #12 if needed
# ==============================================================================

# Check if SSL certificate generation is enabled
if ! bashio::config.true 'generate_ssl_pfx'; then
    bashio::log.info "SSL certificate generation disabled - skipping watch service"
    exit 0
fi

bashio::log.info "================================================="
bashio::log.info "  Starting Certificate Watch"
bashio::log.info "================================================="

# Source utilities and perform initial setup
source "/etc/s6-overlay/scripts/cert_utils.sh"

# Function to get unique directories to watch
get_watch_dirs() {
    echo "$(dirname "$CERT_FILE")" "$(dirname "$KEY_FILE")" "$(dirname "$PKCS12_FILE")" | tr ' ' '\n' | sort -u
}

# Function to handle certificate updates
handle_cert_update() {
    bashio::log.info "Checking certificate status..."
    check_cert_paths

    local regenerate_pkcs12=false

    if [ ! -f "$CERT_FILE" ] || [ ! -f "$KEY_FILE" ]; then
        bashio::log.warning "Certificate files missing - generating self-signed certificates..."
        generate_self_signed
        regenerate_pkcs12=true
    fi

    if [ "$regenerate_pkcs12" = "true" ] || ! check_pkcs12; then
        bashio::log.info "Generating new PKCS12 certificate..."
        if generate_pkcs12; then
            bashio::log.info "================================================="
            bashio::log.info "  PKCS12 Certificate Information"
            bashio::log.info "================================================="
            bashio::log.info "Certificate path: $PKCS12_FILE"
            if [ "$PASSWORD" = "$DEFAULT_PASSWORD" ]; then
                bashio::log.info "Certificate password: $PASSWORD (default)"
                bashio::log.warning "Using default password - consider changing this"
            else
                bashio::log.info "Using configured password from add-on configuration"
            fi
            bashio::log.info ""
            bashio::log.info "To use this certificate in Technitium DNS:"
            bashio::log.info "1. Go to Settings → Web Service."
            bashio::log.info "2. Under HTTPS Options"
            bashio::log.info "   - Enable HTTPS"
            bashio::log.info "   - Enable HTTP/3 (optional)"
            bashio::log.info "   - Do NOT enable HTTP to HTTPS Redirect as it will break the Home Assistant ingress functionality"
            bashio::log.info "3. Set "TLS Certificate File Path" to $PKCS12_FILE"
            bashio::log.info "4. Enter your certificate password in TLS Certificate Password."
            bashio::log.info "5. Click "Save" to apply changes"
            bashio::log.info "6. Enable DNS-over-HTTPS ect. in Settings → Optional Protocols"
            bashio::log.info "================================================="
            if [ -d "/run/service/dns-server" ]; then
                bashio::log.info "Restarting Technitium DNS Server..."
                s6-svc -r /run/service/dns-server
                bashio::log.info "DNS Server restarted"
            fi
        else
            bashio::log.error "Failed to generate PKCS12 certificate"
        fi
    fi
}

# Initial certificate setup
handle_cert_update

# Create all required directories
for dir in $(get_watch_dirs); do
    mkdir -p "$dir"
done

# Watch for changes
bashio::log.info "Starting certificate watch..."
while true; do
    # Watch parent directories for any changes
    if ! inotifywait -e close_write,move,create,delete $(get_watch_dirs) >/dev/null 2>&1; then
        bashio::log.warning "inotifywait failed, retrying in 10 seconds..."
        sleep 10
        continue
    fi

    bashio::log.info "Detected certificate change..."
    handle_cert_update
done
