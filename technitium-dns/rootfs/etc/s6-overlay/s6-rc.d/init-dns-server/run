#!/command/with-contenv bashio
# shellcheck shell=bash
# shellcheck disable=SC1091
# shellcheck disable=SC2154
# ==============================================================================
# Initializing Technitium DNS Server
# ==============================================================================

bashio::log.level "debug"

# Allow DNS server to fully start before configuration
# Use curl to check if the web interface is responding
while ! curl -s --head --fail "${ADDON_API_SERVER}" >/dev/null; do
    bashio::log.debug "Waiting for DNS server to start..."
    sleep 3
done
bashio::log.debug "DNS server is up and running"

bashio::log.debug "================================================="
bashio::log.debug "  Initializing Technitium DNS Server"
bashio::log.debug "================================================="

# -----------------------------------------------------------------------------
# Manual Configuration Check
# -----------------------------------------------------------------------------
if bashio::config.true 'manualConfig'; then
    bashio::log.debug "Manual configuration mode enabled - skipping automatic configuration"
    exit 0
fi

# -----------------------------------------------------------------------------
# Source Dependencies
# -----------------------------------------------------------------------------
# Source utilities and perform initial setup
# shellcheck source=/etc/s6-overlay/scripts/api_utils.sh
if ! source "/etc/s6-overlay/scripts/api_utils.sh"; then
    bashio::exit.nok "Failed to source API utilities"
fi

# shellcheck source=/etc/s6-overlay/scripts/cert_utils.sh
if ! source "/etc/s6-overlay/scripts/cert_utils.sh"; then
    bashio::exit.nok "Failed to source certificate utilities"
fi

# -----------------------------------------------------------------------------
# Configure DNS Server
# -----------------------------------------------------------------------------
# Perform initial certificate setup
handle_cert_update

# Apply configuration via API
# See options here: https://github.com/TechnitiumSoftware/DnsServer/blob/master/APIDOCS.md#set-dns-settings
bashio::log.debug "Applying DNS server configuration..."
make_api_call "settings/set" "POST" "{
    \"dnsServerDomain\": \"${ADDON_DOMAIN}\",
    \"loggingType\": \"FileAndConsole\",
    \"logQueries\": ${ADDON_LOG_QUERIES},
    \"useLocalTime\": true,
    \"maxLogFileDays\": 7,
    \"maxStatFileDays\": 30,
    \"enableDnsOverTls\": ${ADDON_DNS_OVER_TLS},
    \"enableDnsOverHttps\": ${ADDON_DNS_OVER_HTTPS},
    \"enableDnsOverHttp3\": ${ADDON_DNS_OVER_HTTPS3},
    \"enableDnsOverQuic\": ${ADDON_DNS_OVER_QUIC},
    \"dnsTlsCertificatePath\": \"${ADDON_PKCS12_FILE}\",
    \"dnsTlsCertificatePassword\": \"${ADDON_PKCS12_PASSWORD}\",
    \"webServiceEnableTls\": true,
    \"webServiceEnableHttp3\": true,
    \"webServiceTlsCertificatePath\": \"${ADDON_PKCS12_FILE}\",
    \"webServiceTlsCertificatePassword\": \"${ADDON_PKCS12_PASSWORD}\",
    \"forwarders\": ${ADDON_FORWARDER_SERVERS},
    \"forwarderProtocol\": \"${ADDON_FORWARDER_PROTOCOL}\"
}"

# -----------------------------------------------------------------------------
# Install Apps
# -----------------------------------------------------------------------------
# Install query logging app
bashio::log.debug "Installing/updating query logs app..."
manage_dns_app "Query Logs (Sqlite)"
